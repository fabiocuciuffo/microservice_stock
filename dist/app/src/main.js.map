{
  "version": 3,
  "sources": ["../../../src/main.ts"],
  "sourcesContent": ["import express from 'express';\nimport FetchApi from './utils/fetch';\n\nconst STOCK = [\n  {\n    productId: '63f8be39e00cccf1085b6134',\n    quantity: 10\n  },\n  {\n    productId: '65e088ddd48b38df965a0e8f',\n    quantity: 5\n\n  },\n  {\n    productId: '65e08df2d48b38df965a0eaa',\n    quantity: 3\n  }\n]\n\nconst RESERVED_STOCK = [];\n\nconst host = process.env.HOST ?? 'localhost';\nconst port = process.env.PORT ? Number(process.env.PORT) : 3000;\n\nconst app = express();\napp.use(express.json());\n\napp.get('/', (req, res) => {\n  res.send({ message: 'Hello API' });\n});\n\napp.get('/api/ping', (req, res) => {\n  res.send({ message: 'pong' });\n})\n\napp.post('/api/stock/:productId/movement', async (req, res) => {\n  const catalogueApi = new FetchApi('http://microservices.tp.rjqu8633.odns.fr/api');\n  const pId = req.params.productId;\n  let isProductExist;\n  try {\n    isProductExist = await catalogueApi.fetchEndpoint(`/products/${pId}`) ? true : false;\n  } catch (error) {\n    isProductExist = false;\n  }\n\n  if(!isProductExist){\n    res.statusCode = 404;\n    res.send({message: 'Product not found'});\n    return;\n  }\n  const body = req.body;\n  const quantity = body.quantity;\n  const status = body.status;\n\n  switch (status) {\n    case \"Supply\":\n      console.log('Supply');\n      const productExistsInStock = STOCK.find((p) => p.productId === pId);\n      if (!productExistsInStock) {\n        STOCK.push({\n          productId: pId,\n          quantity: quantity\n        });\n      } else {\n        STOCK.map((p) => {\n          if (p.productId === pId) {\n            p.quantity += quantity;\n          }\n        });\n      }\n      break;\n    case \"Reserve\":\n      console.log('Reserve');\n      STOCK.map((product) => {\n        if(product.productId === pId){\n          const exist = RESERVED_STOCK.findIndex((p) => p.productId === pId);\n          if(exist !== -1){\n            RESERVED_STOCK.map((p) => {\n              if(p.productId === pId){\n                p.quantity += quantity;\n              }\n            })\n          } else {\n            RESERVED_STOCK.push(\n              {\n                productId: pId,\n                quantity: quantity\n              }\n            )\n          }\n        }\n      });\n      break;\n    case \"Removal\":\n      STOCK.map((p) => {\n        if (p.productId === pId) {\n          p.quantity -= quantity;\n          if (p.quantity <= 0) {\n            const index = STOCK.findIndex((item) => item.productId === pId);\n            STOCK.splice(index, 1);\n          }\n        }\n      });\n      break;\n  \n    default:\n      break;\n  }\n\n  console.log(STOCK);\n  console.log(RESERVED_STOCK);\n  res.statusCode = 204;\n  res.send();\n})\n\napp.get('/api/stock', (req, res) => {\n  const stockNotNull = STOCK.filter(item => item.quantity > 0)\n  try {\n    return res.status(200).json(stockNotNull)\n  } catch (error) {\n    return res.status(500).json({\n      message: 'Erreur lors de la r\u00E9cup\u00E9ration des donn\u00E9es du stock',\n      error: error.message,\n    })\n  }\n})\n\n\napp.listen(port, host, () => {\n  console.log(`[ ready ] http://${host}:${port}`);\n});"],
  "mappings": "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",
  "names": ["express", "FetchApi"]
}
